{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    var _this;\n\n    _classCallCheck(this, ContributeForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      value: ''\n    });\n\n    return _this;\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        onSubmit: this.onSubmit\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n        value: this.state.value,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            value: event.target.value\n          });\n        },\n        label: \"ether\",\n        labelPosition: \"right\"\n      }), __jsx(Button, {\n        primary: true\n      }, \"Contribute!\")));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport default ContributeForm;","map":{"version":3,"sources":["C:/Users/a/desktop/games/satoshi/projects/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","ContributeForm","value","onSubmit","state","event","setState","target"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;;IAEMC,c;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,KAAK,EAAE;AADD,K;;;;;;;6BAIC;AAAA;;AACP,aACE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAE,KAAKC;AAArB,SACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACA,QAAA,KAAK,EAAE,KAAKC,KAAL,CAAWF,KADlB;AAEA,QAAA,QAAQ,EAAG,kBAAAG,KAAK;AAAA,iBAAI,MAAI,CAACC,QAAL,CAAc;AAAEJ,YAAAA,KAAK,EAAEG,KAAK,CAACE,MAAN,CAAaL;AAAtB,WAAd,CAAJ;AAAA,SAFhB;AAGA,QAAA,KAAK,EAAC,OAHN;AAIA,QAAA,aAAa,EAAC;AAJd,QAFF,EAOE,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,uBAPF,CADF,CADF;AAaD;;;;EAnB0BN,S;;AAsB7B,eAAeK,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\r\n\r\nclass ContributeForm extends Component {\r\n  state = {\r\n    value: ''\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Field>\r\n          <label>Amount to Contribute</label>\r\n          <Input \r\n          value={this.state.value}\r\n          onChange={ event => this.setState({ value: event.target.value })}\r\n          label=\"ether\" \r\n          labelPosition=\"right\" />\r\n          <Button primary>Contribute!</Button>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContributeForm;\r\n"]},"metadata":{},"sourceType":"module"}