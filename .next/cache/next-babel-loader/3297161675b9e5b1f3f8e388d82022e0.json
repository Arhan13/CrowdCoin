{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\nimport Campaign from \"../ethereum/campaign\";\nimport web3 from \"../ethereum/web3\";\nimport { Router } from \"../routes\";\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\"\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n\n      try {\n        const accounts = await web3.eth.getAccounts();\n        await campaign.methods.contribute().send({\n          from: accounts[0],\n          value: web3.utils.toWei(this.state.value, \"ether\")\n        });\n        Router.replaceRoute(`/campaigns/${this.props.address}`);\n      } catch (err) {}\n    });\n  }\n\n  render() {\n    return __jsx(Form, {\n      onSubmit: this.onSubmit\n    }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to Contribute\"), __jsx(Input, {\n      value: this.state.value,\n      onChange: event => this.setState({\n        value: event.target.value\n      }),\n      label: \"ether\",\n      labelPosition: \"right\"\n    }), __jsx(Button, {\n      primary: true\n    }, \"Contribute!\")));\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["C:/Users/a/desktop/games/satoshi/projects/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","Campaign","web3","Router","ContributeForm","value","event","preventDefault","campaign","props","address","accounts","eth","getAccounts","methods","contribute","send","from","utils","toWei","state","replaceRoute","err","render","onSubmit","setState","target"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,OAAtB,EAA+BC,MAA/B,QAA6C,mBAA7C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,MAAT,QAAuB,WAAvB;;AAEA,MAAMC,cAAN,SAA6BR,SAA7B,CAAuC;AAAA;AAAA;;AAAA,mCAC7B;AACNS,MAAAA,KAAK,EAAE;AADD,KAD6B;;AAAA,sCAK1B,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAMC,QAAQ,GAAGP,QAAQ,CAAC,KAAKQ,KAAL,CAAWC,OAAZ,CAAzB;;AAEA,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACU,GAAL,CAASC,WAAT,EAAvB;AACA,cAAML,QAAQ,CAACM,OAAT,CAAiBC,UAAjB,GAA8BC,IAA9B,CAAmC;AACvCC,UAAAA,IAAI,EAAEN,QAAQ,CAAC,CAAD,CADyB;AAEvCN,UAAAA,KAAK,EAAEH,IAAI,CAACgB,KAAL,CAAWC,KAAX,CAAiB,KAAKC,KAAL,CAAWf,KAA5B,EAAmC,OAAnC;AAFgC,SAAnC,CAAN;AAKAF,QAAAA,MAAM,CAACkB,YAAP,CAAqB,cAAa,KAAKZ,KAAL,CAAWC,OAAQ,EAArD;AACD,OARD,CAQE,OAAOY,GAAP,EAAY,CAAE;AACjB,KAnBoC;AAAA;;AAqBrCC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC;AAArB,OACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AACE,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWf,KADpB;AAEE,MAAA,QAAQ,EAAGC,KAAD,IAAW,KAAKmB,QAAL,CAAc;AAAEpB,QAAAA,KAAK,EAAEC,KAAK,CAACoB,MAAN,CAAarB;AAAtB,OAAd,CAFvB;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,aAAa,EAAC;AAJhB,MAFF,EAQE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBARF,CADF,CADF;AAcD;;AApCoC;;AAuCvC,eAAeD,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Message, Button } from \"semantic-ui-react\";\r\nimport Campaign from \"../ethereum/campaign\";\r\nimport web3 from \"../ethereum/web3\";\r\nimport { Router } from \"../routes\";\r\n\r\nclass ContributeForm extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const campaign = Campaign(this.props.address);\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n      await campaign.methods.contribute().send({\r\n        from: accounts[0],\r\n        value: web3.utils.toWei(this.state.value, \"ether\"),\r\n      });\r\n\r\n      Router.replaceRoute(`/campaigns/${this.props.address}`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Form onSubmit={this.onSubmit}>\r\n        <Form.Field>\r\n          <label>Amount to Contribute</label>\r\n          <Input\r\n            value={this.state.value}\r\n            onChange={(event) => this.setState({ value: event.target.value })}\r\n            label=\"ether\"\r\n            labelPosition=\"right\"\r\n          />\r\n          <Button primary>Contribute!</Button>\r\n        </Form.Field>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContributeForm;\r\n"]},"metadata":{},"sourceType":"module"}